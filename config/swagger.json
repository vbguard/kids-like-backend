{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.0",
		"title": "API",
		"description": "A minimal and easy API",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"basePath": "/api/v1",
	"schemes": ["https", "http"],
	"servers": [
		{
			"url": "https://kidslike.goit.co.ua/api/v1",
			"description": "The production API server"
		},
		{
			"url": "http://localhost:5000/api/v1",
			"description": "The production API server"
		}
	],
	"tags": [
		{
			"name": "Public",
			"description": "NoProtected routes"
		},
		{
			"name": "Protected",
			"description": "Protected routes"
		},
		{
			"name": "Protected For front pri",
			"description": "Protected routes for prior need to"
		}
	],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"securityDefinitions": {},
	"paths": {
		"/auth/me": {
			"get": {
				"description": "Get user data by token",
				"tags": ["Protected"],
				"summary": "route for get user in system",
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": ["Public"],
				"summary": "route for login user in system",
				"requestBody": {
					"description": "",
					"required": ["email", "password"],
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							},
							"example": {
								"email": "email@email.com",
								"password": "password"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LoginResponse"
								}
							}
						}
					},
					"400": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"message": {
											"type": "string",
											"example": "Invalid Password"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"error": {
											"type": "string",
											"example": "User not found"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": false
												},
												"message": {
													"type": "string",
													"example": "Field password empty"
												}
											}
										},
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": false
												},
												"message": {
													"type": "string",
													"example": "Field nickname empty"
												}
											}
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"tags": ["Public"],
				"summary": "route for register user in system",
				"requestBody": {
					"description": "",
					"required": ["email", "password"],
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequest"
							},
							"example": {
								"email": "testovoy@gmail.com",
								"password": "password",
								"nickname": "Testovoy",
								"name": {
									"fullName": "Jorik McFlayer",
									"fisrtName": "Jorik",
									"lastName": "McFlayer"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RegisterResponse"
								}
							}
						}
					},
					"400": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "string",
											"example": "error"
										},
										"error": {
											"type": "string",
											"example": "There was a duplicate key error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "string",
													"example": "error"
												},
												"error": {
													"type": "string",
													"example": "Field password empty"
												},
												"fields": {
													"type": "array",
													"items": {
														"type": "string",
														"example": ["email", "password"]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"tags": ["Protected"],
				"summary": "Logout user from system",
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/tasks/{taskId}": {
			"patch": {
				"tags": ["Protected For front pri"],
				"summary": "If user toggle (complete) task",
				"security": ["bearerAuth"],
				"description": "Update task by taskId",
				"parameters": [
					{
						"in": "query",
						"required": true,
						"name": "taskId"
					},
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"requestBody": {
					"content": {
						"applecation/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskCreate"
							},
							"example": {
								"isDone": true
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks": {
			"get": {
				"summary": "Get user Tasks",
				"tags": ["Protected For front pri"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Protected"],
				"summary": "Delete task",
				"security": ["bearerAuth"],
				"description": "Delete task",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"requestBody": {
					"content": {
						"applecation/json": {
							"schema": {
								"$ref": "#/components/schemas/Task"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks/planning/custom": {
			"post": {
				"description": "Create custom planing Task when user will add custom task to PlanningPage list.",
				"summary": "Create custom planing Task when user will add custom task to PlanningPage list.",
				"tags": ["Protected For front pri"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks/planning/week": {
			"post": {
				"description": "Create for week tasks from planning task, this endpoints on Sumbit button in PlanningPage",
				"summary": "This endpoints need for set selected tasks in PlanningPage by submit button",
				"security": ["bearerAuth"],
				"tags": ["Protected For front pri"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"requestBody": {
					"description": "",
					"required": ["email", "password"],
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomPlanningTask"
							},
							"example": {
								"tasks": [
									{
										"taskId": "5dfae60d5c54e0bca5e3c717",
										"selectedDays": ["2019-12-19", "2019-12-16"]
									},
									{
										"taskId": "5dfae60d5c54e0bca5e3c71b",
										"selectedDays": ["2019-12-15", "2019-12-16"]
									},
									{
										"taskId": "5dfae92895cc29d9de4f928e",
										"selectedDays": ["2019-12-15", "2019-12-16"]
									},
									{
										"taskId": "5dfae60d5c54e0bca5e3c71c",
										"selectedDays": [
											"2019-12-15",
											"2019-12-17",
											"2019-12-18",
											"2019-12-19"
										]
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks/planning": {
			"get": {
				"description": "Get planning Tasks",
				"summary": "This endpoints need for PlanningPage. Get planning Tasks",
				"tags": ["Protected For front pri"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPlanningTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"description": "Create planning task",
				"summary": "Create planning task",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"requestBody": {
					"description": "",
					"required": ["email", "password"],
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CustomPlanningTask"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks/default/{:defaulttaskId}": {
			"patch": {
				"description": "Update defaultTask by defaultTaskId",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"description": "Delete default task by defaulttaskId",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"description": "get defaultTask by defaultaskId",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tasks/default": {
			"post": {
				"description": "Create default tasks",
				"summary": "This endpoint need to create all default tasks. Create default tasks",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"description": "Get default tasks",
				"tags": ["Protected"],
				"security": ["bearerAuth"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "JWT",
						"required": true,
						"style": "simple",
						"schema": {
							"$ref": "#/components/securitySchemes/bearerAuth"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/GetTasks"
								}
							}
						}
					},
					"401": {
						"$ref": "#/components/responses/UnauthorizedError"
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {"type": "boolean"},
										"error": {"type": "object"},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"api_key": {
				"type": "scheme",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			},
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"LoginRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"required": true
					},
					"password": {
						"type": "string",
						"maxLength": 15,
						"minLength": 5,
						"required": true
					}
				},
				"required": ["email", "password"],
				"example": {
					"email": "email@email.com",
					"password": "password"
				}
			},
			"RegisterRequest": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string"
					},
					"nickname": {"type": "sting"},
					"name": {
						"type": "object",
						"properties": {
							"fullName": {
								"type": "string"
							},
							"firstName": {
								"type": "string"
							},
							"lastName": {
								"type": "string"
							}
						}
					}
				},
				"required": ["email", "password", "fullName"],
				"example": {
					"email": "testovoy@gmail.com",
					"password": "password",
					"nickname": "Testovoy"
				}
			},
			"User": {
				"type": "object",
				"properties": {
					"nickname": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"name": {
						"type": "object",
						"properties": {
							"fullName": {
								"type": "string"
							},
							"firstName": {
								"type": "string"
							},
							"lastName": {
								"type": "string"
							}
						}
					}
				}
			},
			"GetTasks": {
				"type": "object",
				"properties": {
					"today": {
						"type": "string",
						"format": "datetime",
						"example": "2019-12-18T23:34:19.107Z"
					},
					"weekRange": {
						"type": "object",
						"properties": {
							"fromDate": {
								"type": "string",
								"format": "datetime",
								"example": "2019-12-18T23:34:19.107Z"
							},
							"toDate": {
								"type": "string",
								"format": "datetime",
								"example": "2019-12-18T23:34:19.107Z"
							}
						}
					},
					"tasks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Task"
						}
					},
					"totalAmount": {
						"type": "number",
						"example": 0
					},
					"totalDone": {
						"type": "number",
						"example": 0
					}
				}
			},
			"Task": {
				"type": "object",
				"properties": {
					"isDone": {"type": "boolean", "default": false},
					"points": {"type": "number", "example": 1},
					"cardTitle": {"type": "string", "example": "прибрати у шафі"},
					"imageUrl": {
						"type": "string",
						"example": "https://kidslike.goit.co.ua/images/washGlass.png"
					},
					"_id": {"type": "string", "format": "uuid"}
				}
			},
			"CustomPlanningTask": {
				"type": "object",
				"properties": {
					"cardTitle": {
						"type": "string"
					},
					"imageUrl": {
						"type": "string",
						"format": "url",
						"example": "https://kidslike.goit.co.ua/images/default.jpg"
					}
				}
			},
			"TaskCreate": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {"type": "string"},
					"dates": {
						"type": "array",
						"items": {
							"type": "string",
							"format": "date-time"
						}
					}
				}
			},
			"PlanningTaskResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"default": "OK",
						"example": "OK"
					},
					"planningTask": {
						"type": "object",
						"properties": {
							"status": {
								"type": "string",
								"default": "OK",
								"example": "OK"
							}
						}
					}
				}
			},
			"LoginResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"default": "success",
						"example": "success"
					},
					"userData": {
						"$ref": "#/components/schemas/User"
					},
					"token": {
						"type": "string",
						"example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZDNhMTM4NmIxZTg1NTdjZjIzNjY3ODEiLCJpYXQiOjE1NjQwODcxNzV9.jSdzHuBSf4yKS6t7zwt0AoQIchHlz73JDOjfHVdbTBk"
					}
				}
			},
			"RegisterResponse": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"default": "success",
						"example": "success"
					},
					"userData": {
						"$ref": "#/components/schemas/User"
					},
					"token": {
						"type": "string",
						"example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZDNhMTM4NmIxZTg1NTdjZjIzNjY3ODEiLCJpYXQiOjE1NjQwODcxNzV9.jSdzHuBSf4yKS6t7zwt0AoQIchHlz73JDOjfHVdbTBk"
					}
				}
			}
		},
		"responses": {
			"UnauthorizedError": {
				"description": "Access token is missing or invalid"
			}
		}
	}
}
